name: CI/CD Full Stack App

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/simple-frontend:latest

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/simple-backend:latest

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'placeholder'
          if_key_exists: replace

      - name: Add known host
        run: ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to server and show logs
        run: |
          ssh root@${{ secrets.SERVER_IP }} << 'EOF'
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/simple-frontend:latest
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/simple-backend:latest

            docker stop frontend || true && docker rm frontend || true
            docker stop backend || true && docker rm backend || true
            docker stop db || true && docker rm db || true
            docker network create app-net || true

            docker run -d --name db \
              --network app-net \
              -e POSTGRES_USER=testuser \
              -e POSTGRES_PASSWORD=testpass \
              -e POSTGRES_DB=testdb \
              -v db_data:/var/lib/postgresql/data \
              postgres:14

            docker run -d --name backend \
              --network app-net \
              -p 5000:5000 \
              ${{ secrets.DOCKER_HUB_USERNAME }}/simple-backend:latest

            docker run -d --name frontend \
              --network app-net \
              -p 9000:3000 \
              ${{ secrets.DOCKER_HUB_USERNAME }}/simple-frontend:latest

            echo "Checking container status"
            docker ps -a

            echo "Backend logs:"
            docker logs backend || true

            echo "rontend logs:"
            docker logs frontend || true
          EOF
